{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Ionicons } from '@expo/vector-icons';\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResetPassword = function ResetPassword(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState({\n      length: false,\n      number: false,\n      specialChar: false,\n      match: false\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    validationResults = _useState6[0],\n    setValidationResults = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showPassword = _useState8[0],\n    setShowPassword = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    message = _useState10[0],\n    setMessage = _useState10[1];\n  var handleResetPassword = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setMessage(null);\n      if (!validatePassword()) {\n        return;\n      }\n      try {\n        var response = yield axios.post('YOUR_NODE_SERVER_ENDPOINT/reset-password/reset', {\n          email: route.params.email,\n          token: route.params.token,\n          password: password\n        });\n        if (response.data.success) {\n          setMessage('Password reset successful. You can now log in with your new password.');\n          navigation.navigate('Login');\n        } else {\n          setMessage('Something went wrong. Please try again later.');\n        }\n      } catch (error) {\n        console.error('Error resetting password:', error.message);\n        setMessage('An error occurred while resetting the password.');\n      }\n    });\n    return function handleResetPassword() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var validatePassword = function validatePassword() {\n    var passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])(.{8,})$/;\n    var lengthValid = password.length >= 8;\n    var numberValid = /\\d/.test(password);\n    var specialCharValid = /[!@#$%^&*]/.test(password);\n    var matchValid = password === confirmPassword;\n    setValidationResults({\n      length: lengthValid,\n      number: numberValid,\n      specialChar: specialCharValid,\n      match: matchValid\n    });\n    return lengthValid && numberValid && specialCharValid && matchValid;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.passwordContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Enter New Password\",\n        secureTextEntry: !showPassword,\n        value: password,\n        onChangeText: function onChangeText(text) {\n          setPassword(text);\n          validatePassword();\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.eyeIcon,\n        onPress: function onPress() {\n          return setShowPassword(!showPassword);\n        },\n        children: _jsx(Ionicons, {\n          name: showPassword ? 'eye-off' : 'eye',\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    }), renderValidationItem('Minimum 8 characters', validationResults.length), renderValidationItem('At least 1 number', validationResults.number), renderValidationItem('At least 1 special character', validationResults.specialChar), _jsxs(View, {\n      style: styles.passwordContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Confirm New Password\",\n        secureTextEntry: !showPassword,\n        value: confirmPassword,\n        onChangeText: function onChangeText(text) {\n          setConfirmPassword(text);\n          validatePassword();\n        }\n      }), _jsx(TouchableOpacity, {\n        style: styles.eyeIcon,\n        onPress: function onPress() {\n          return setShowPassword(!showPassword);\n        },\n        children: _jsx(Ionicons, {\n          name: showPassword ? 'eye-off' : 'eye',\n          size: 24,\n          color: \"black\"\n        })\n      })]\n    }), renderValidationItem('Passwords match', validationResults.match), _jsx(Button, {\n      title: \"Reset Password\",\n      onPress: handleResetPassword,\n      style: styles.button\n    }), message && _jsx(Text, {\n      style: styles.message,\n      children: message\n    })]\n  });\n};\nvar renderValidationItem = function renderValidationItem(text, isValid) {\n  return _jsxs(View, {\n    style: styles.validationItem,\n    children: [_jsx(Text, {\n      style: {\n        color: isValid ? 'green' : 'red'\n      },\n      children: isValid ? '✅' : '❌'\n    }), _jsx(Text, {\n      style: {\n        marginLeft: 8\n      },\n      children: text\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  passwordContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    padding: 8\n  },\n  eyeIcon: {\n    padding: 8\n  },\n  validationItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  button: {\n    marginTop: 12\n  },\n  message: {\n    marginTop: 12,\n    color: 'red'\n  }\n});\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","TouchableOpacity","Ionicons","axios","jsx","_jsx","jsxs","_jsxs","ResetPassword","_ref","route","navigation","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","length","number","specialChar","match","_useState6","validationResults","setValidationResults","_useState7","_useState8","showPassword","setShowPassword","_useState9","_useState10","message","setMessage","handleResetPassword","_ref2","_asyncToGenerator","validatePassword","response","post","email","params","token","data","success","navigate","error","console","apply","arguments","passwordRegex","lengthValid","numberValid","test","specialCharValid","matchValid","style","styles","container","children","passwordContainer","input","placeholder","secureTextEntry","value","onChangeText","text","eyeIcon","onPress","name","size","color","renderValidationItem","title","button","isValid","validationItem","marginLeft","create","flex","justifyContent","alignItems","padding","flexDirection","height","borderColor","borderWidth","marginBottom","marginTop"],"sources":["C:/project2/panic-button-alerts/client/components/forgetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons'; // Import Ionicons from the Expo icons library\r\nimport axios from 'axios';\r\n\r\nconst ResetPassword = ({ route, navigation }) => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [validationResults, setValidationResults] = useState({\r\n    length: false,\r\n    number: false,\r\n    specialChar: false,\r\n    match: false,\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const handleResetPassword = async () => {\r\n    setMessage(null); // Clear previous messages\r\n\r\n    if (!validatePassword()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('YOUR_NODE_SERVER_ENDPOINT/reset-password/reset', {\r\n        email: route.params.email,\r\n        token: route.params.token,\r\n        password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setMessage('Password reset successful. You can now log in with your new password.');\r\n        navigation.navigate('Login');\r\n      } else {\r\n        setMessage('Something went wrong. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error.message);\r\n      setMessage('An error occurred while resetting the password.');\r\n    }\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])(.{8,})$/;\r\n\r\n    const lengthValid = password.length >= 8;\r\n    const numberValid = /\\d/.test(password);\r\n    const specialCharValid = /[!@#$%^&*]/.test(password);\r\n    const matchValid = password === confirmPassword;\r\n\r\n    setValidationResults({\r\n      length: lengthValid,\r\n      number: numberValid,\r\n      specialChar: specialCharValid,\r\n      match: matchValid,\r\n    });\r\n\r\n    return lengthValid && numberValid && specialCharValid && matchValid;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.passwordContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter New Password\"\r\n          secureTextEntry={!showPassword}\r\n          value={password}\r\n          onChangeText={(text) => {\r\n            setPassword(text);\r\n            validatePassword();\r\n          }}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.eyeIcon}\r\n          onPress={() => setShowPassword(!showPassword)}>\r\n          <Ionicons name={showPassword ? 'eye-off' : 'eye'} size={24} color=\"black\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      {renderValidationItem('Minimum 8 characters', validationResults.length)}\r\n      {renderValidationItem('At least 1 number', validationResults.number)}\r\n      {renderValidationItem('At least 1 special character', validationResults.specialChar)}\r\n      <View style={styles.passwordContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Confirm New Password\"\r\n          secureTextEntry={!showPassword}\r\n          value={confirmPassword}\r\n          onChangeText={(text) => {\r\n            setConfirmPassword(text);\r\n            validatePassword();\r\n          }}\r\n        />\r\n        <TouchableOpacity\r\n          style={styles.eyeIcon}\r\n          onPress={() => setShowPassword(!showPassword)}>\r\n          <Ionicons name={showPassword ? 'eye-off' : 'eye'} size={24} color=\"black\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      {renderValidationItem('Passwords match', validationResults.match)}\r\n      <Button title=\"Reset Password\" onPress={handleResetPassword} style={styles.button} />\r\n\r\n      {message && <Text style={styles.message}>{message}</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst renderValidationItem = (text, isValid) => (\r\n  <View style={styles.validationItem}>\r\n    <Text style={{ color: isValid ? 'green' : 'red' }}>{isValid ? '✅' : '❌'}</Text>\r\n    <Text style={{ marginLeft: 8 }}>{text}</Text>\r\n  </View>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  passwordContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 12,\r\n    padding: 8,\r\n  },\r\n  eyeIcon: {\r\n    padding: 8,\r\n  },\r\n  validationItem: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  button: {\r\n    marginTop: 12,\r\n  },\r\n  message: {\r\n    marginTop: 12,\r\n    color: 'red', // or any other color you prefer for error messages\r\n  },\r\n});\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}