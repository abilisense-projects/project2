{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResetPassword = function ResetPassword(_ref) {\n  var route = _ref.route,\n    navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    message = _useState6[0],\n    setMessage = _useState6[1];\n  var handleResetPassword = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      setMessage(null);\n      if (!validatePassword()) {\n        return;\n      }\n      try {\n        var response = yield axios.post('YOUR_NODE_SERVER_ENDPOINT/reset-password/reset', {\n          email: route.params.email,\n          token: route.params.token,\n          password: password\n        });\n        if (response.data.success) {\n          setMessage('Password reset successful. You can now log in with your new password.');\n          navigation.navigate('Login');\n        } else {\n          setMessage('Something went wrong. Please try again later.');\n        }\n      } catch (error) {\n        console.error('Error resetting password:', error.message);\n        setMessage('An error occurred while resetting the password.');\n      }\n    });\n    return function handleResetPassword() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var validatePassword = function validatePassword() {\n    var passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])(.{8,})$/;\n    if (!passwordRegex.test(password)) {\n      setMessage('Invalid Password: Password must be at least 8 characters long and contain at least one number and one special character.');\n      return false;\n    }\n    if (password !== confirmPassword) {\n      setMessage('Password Mismatch: Passwords do not match.');\n      return false;\n    }\n    return true;\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter New Password\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Confirm New Password\",\n      secureTextEntry: true,\n      value: confirmPassword,\n      onChangeText: function onChangeText(text) {\n        return setConfirmPassword(text);\n      }\n    }), _jsx(Button, {\n      title: \"Reset Password\",\n      onPress: handleResetPassword,\n      style: styles.button\n    }), message && _jsx(Text, {\n      style: styles.message,\n      children: message\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 12,\n    padding: 8\n  },\n  button: {\n    marginTop: 12\n  },\n  message: {\n    marginTop: 12,\n    color: 'red'\n  }\n});\nexport default ResetPassword;","map":{"version":3,"names":["React","useState","View","TextInput","Button","Text","StyleSheet","axios","jsx","_jsx","jsxs","_jsxs","ResetPassword","_ref","route","navigation","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","message","setMessage","handleResetPassword","_ref2","_asyncToGenerator","validatePassword","response","post","email","params","token","data","success","navigate","error","console","apply","arguments","passwordRegex","test","style","styles","container","children","input","placeholder","secureTextEntry","value","onChangeText","text","title","onPress","button","create","flex","justifyContent","alignItems","padding","width","height","borderColor","borderWidth","marginBottom","marginTop","color"],"sources":["C:/project2/panic-button-alerts/client/components/forgetPassword/ResetPassword.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nconst ResetPassword = ({ route, navigation }) => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const handleResetPassword = async () => {\r\n    setMessage(null); // Clear previous messages\r\n\r\n    if (!validatePassword()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('YOUR_NODE_SERVER_ENDPOINT/reset-password/reset', {\r\n        email: route.params.email,\r\n        token: route.params.token,\r\n        password,\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setMessage('Password reset successful. You can now log in with your new password.');\r\n        navigation.navigate('Login');\r\n      } else {\r\n        setMessage('Something went wrong. Please try again later.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error resetting password:', error.message);\r\n      setMessage('An error occurred while resetting the password.');\r\n    }\r\n  };\r\n\r\n  const validatePassword = () => {\r\n    const passwordRegex = /^(?=.*[0-9])(?=.*[!@#$%^&*])(.{8,})$/;\r\n\r\n    if (!passwordRegex.test(password)) {\r\n      setMessage(\r\n        'Invalid Password: Password must be at least 8 characters long and contain at least one number and one special character.'\r\n      );\r\n      return false;\r\n    }\r\n\r\n    if (password !== confirmPassword) {\r\n      setMessage('Password Mismatch: Passwords do not match.');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Enter New Password\"\r\n        secureTextEntry\r\n        value={password}\r\n        onChangeText={(text) => setPassword(text)}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirm New Password\"\r\n        secureTextEntry\r\n        value={confirmPassword}\r\n        onChangeText={(text) => setConfirmPassword(text)}\r\n      />\r\n      <Button title=\"Reset Password\" onPress={handleResetPassword} style={styles.button} />\r\n\r\n      {message && <Text style={styles.message}>{message}</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 12,\r\n    padding: 8,\r\n  },\r\n  button: {\r\n    marginTop: 12,\r\n  },\r\n  message: {\r\n    marginTop: 12,\r\n    color: 'red', // or any other color you prefer for error messages\r\n  },\r\n});\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}