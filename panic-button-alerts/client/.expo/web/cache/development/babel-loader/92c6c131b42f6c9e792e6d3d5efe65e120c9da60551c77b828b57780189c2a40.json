{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var isEmailValid = function isEmailValid(email) {\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        if (!isEmailValid(email)) {\n          console.error('Invalid email format');\n          return;\n        }\n        var user = {\n          username: 'test'\n        };\n        if (!user) {\n          console.error('Invalid credentials');\n          return;\n        }\n        var token = 'example_token';\n        console.log('Login successful');\n        navigation.navigate('Home');\n      } catch (error) {\n        console.error(error.message);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.header,\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      onChangeText: function onChangeText(text) {\n        return setEmail(text);\n      },\n      value: email\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Password\",\n      secureTextEntry: true,\n      onChangeText: function onChangeText(text) {\n        return setPassword(text);\n      },\n      value: password\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(Text, {\n        style: styles.forgotPassword,\n        onPress: function onPress() {\n          return navigation.navigate('ForgotPassword');\n        },\n        children: \"Forgot Password?\"\n      }), _jsx(Text, {\n        style: styles.register,\n        onPress: function onPress() {\n          return navigation.navigate('Register');\n        },\n        children: \"Register\"\n      })]\n    }), _jsx(Button, {\n      title: \"Login\",\n      onPress: handleLogin\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  header: {\n    fontSize: 24,\n    marginBottom: 20\n  },\n  input: {\n    width: '25%',\n    height: 20,\n    borderColor: 'gray',\n    borderWidth: 1,\n    marginBottom: 10,\n    padding: 10\n  },\n  forgotPassword: {\n    fontSize: 16,\n    color: 'blue',\n    textDecorationLine: 'underline',\n    marginBottom: 10\n  },\n  register: {\n    fontSize: 16,\n    color: 'blue',\n    textDecorationLine: 'underline',\n    marginLeft: 20\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Login","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","isEmailValid","emailRegex","test","handleLogin","_ref2","_asyncToGenerator","console","error","user","username","token","log","navigate","message","apply","arguments","style","styles","container","children","header","input","placeholder","onChangeText","text","value","secureTextEntry","flexDirection","forgotPassword","onPress","register","title","create","flex","justifyContent","alignItems","fontSize","marginBottom","width","height","borderColor","borderWidth","padding","color","textDecorationLine","marginLeft"],"sources":["C:/project/project2/panic-button-alerts/client/pages/LogIn.js"],"sourcesContent":["\r\n\r\nimport React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, StyleSheet, AsyncStorage } from 'react-native';\r\n\r\n// Import necessary dependencies (you may need to import these based on your project setup)\r\n// Import usersCollection, jwt, and AsyncStorage\r\n\r\nconst Login = ({ navigation }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const isEmailValid = (email) => {\r\n    // Regular expression for basic email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      // Validate email format\r\n      if (!isEmailValid(email)) {\r\n        console.error('Invalid email format');\r\n        return;\r\n      }\r\n\r\n      // Connect to MongoDB and verify user credentials\r\n      // Replace the next line with the actual logic for connecting to MongoDB\r\n      // const user = await usersCollection.findOne({ email, password });\r\n      const user = { username: 'test' }; // Example user object\r\n\r\n      if (!user) {\r\n        console.error('Invalid credentials');\r\n        return;\r\n      }\r\n\r\n      // Create JWT token\r\n      // Replace the next line with the actual logic for creating a JWT token\r\n      // const token = jwt.sign({ username: user.username }, process.env.JWT_SECRET, { expiresIn: '1h' });\r\n      const token = 'example_token'; // Example token\r\n\r\n      // Store token in local storage and navigate to home screen\r\n      // Replace the next line with the actual logic for storing the token\r\n      // await AsyncStorage.setItem('token', token);\r\n      console.log('Login successful');\r\n      navigation.navigate('Home');\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.header}>Login</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        onChangeText={(text) => setEmail(text)}\r\n        value={email}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Password\"\r\n        secureTextEntry\r\n        onChangeText={(text) => setPassword(text)}\r\n        value={password}\r\n      />\r\n      <View style={{ flexDirection: 'row' }}>\r\n        <Text style={styles.forgotPassword} onPress={() => navigation.navigate('ForgotPassword')}>\r\n          Forgot Password?\r\n        </Text>\r\n        <Text style={styles.register} onPress={() => navigation.navigate('Register')}>\r\n          Register\r\n        </Text>\r\n      </View>\r\n\r\n      <Button title=\"Login\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  header: {\r\n    fontSize: 24,\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '25%',\r\n    height: 20,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n  },\r\n  forgotPassword: {\r\n    fontSize: 16,\r\n    color: 'blue',\r\n    textDecorationLine: 'underline',\r\n    marginBottom: 10,\r\n  },\r\n  register: {\r\n    fontSize: 16,\r\n    color: 'blue',\r\n    textDecorationLine: 'underline',\r\n    marginLeft: 20,\r\n  },\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}